{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/TodoList/Todo.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h2/Hw2.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Prejun.module.css","p2-homeworks/h3/HW3.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/TodoList/Todo.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","main_nav_block","links_block","link","to","activeClassName","activeLink","HW1","Todo","props","task","map","t","key","id","list_block","list_item","importance","onClick","removeTask","remove_button","filter","filter_button","changeTask","HW2","useState","setTask","setFilter","arrayAfterFilter","wrapper","list_container","value","Greeting","name","setNameCallback","addUser","error","totalUsers","users","inputClass","correctInput","input_wrapper","onChange","placeholder","error_1","add_user_btn","userCount","users_block","u","GreetingContainer","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","home_3","newUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","h4","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","prejun_wrapper","Error404","numberError","messageError","Routes","exact","path","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,YAAc,8BAA8B,cAAgB,gCAAgC,aAAe,+BAA+B,MAAQ,wBAAwB,QAAU,0BAA0B,aAAe,+BAA+B,UAAY,8B,gBCA9TD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,YAAc,4BAA4B,KAAO,qBAAqB,WAAa,6B,gBCArJD,EAAOC,QAAU,CAAC,WAAa,yBAAyB,UAAY,wBAAwB,iBAAmB,+BAA+B,cAAgB,4BAA4B,OAAS,qBAAqB,cAAgB,8B,sBCAxOD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,YAAc,8BAA8B,aAAe,iC,mBCAjHD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,eAAiB,8B,gBCAlED,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,gBCApDD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,iBCAxBD,EAAOC,QAAU,CAAC,eAAiB,iC,gBCAnCD,EAAOC,QAAU,CAAC,OAAS,sB,uLCqBZC,MAlBf,WACI,OACI,yBAAKC,UAAWC,IAAEC,gBACd,yBAAKF,UAAWC,IAAEE,aACd,yBAAKH,UAAWC,IAAEG,MACd,kBAAC,IAAD,CAASC,GAAG,cAAcC,gBAAiBL,IAAEM,YAA7C,cAEJ,yBAAKP,UAAWC,IAAEG,MACd,kBAAC,IAAD,CAASC,GAAG,mBAAmBC,gBAAiBL,IAAEM,YAAlD,cAEJ,yBAAKP,UAAWC,IAAEG,MACd,kBAAC,IAAD,CAASC,GAAG,oBAAoBC,gBAAiBL,IAAEM,YAAnD,iB,wBCcLC,MApBf,WACI,OACI,6BACI,4C,wCCqCGC,MAvCf,SAAcC,GACV,OACI,6BACKA,EAAMC,KAAKC,KAAI,SAAAC,GACZ,OACI,yBAAKC,IAAKD,EAAEE,GAAIf,UAAWC,IAAEe,YACzB,yBAAKhB,UAAWC,IAAEgB,WACd,2BAAIJ,EAAEF,MACN,yBAAKX,UAAWa,EAAEK,aAClB,4BAAQC,QAAS,WACbT,EAAMU,WAAWP,EAAEE,KACpBf,UAAWC,IAAEoB,eAFhB,UAQhB,yBAAKrB,UAAWC,IAAEqB,QACd,4BAAQtB,UAAWC,IAAEsB,cAAeJ,QAAS,WACzCT,EAAMc,WAAW,SADrB,OAIA,4BAAQxB,UAAWC,IAAEsB,cAAeJ,QAAS,WACzCT,EAAMc,WAAW,UADrB,QAIA,4BAAQxB,UAAWC,IAAEsB,cAAeJ,QAAS,WACzCT,EAAMc,WAAW,YADrB,UAIA,4BAAQxB,UAAWC,IAAEsB,cAAeJ,QAAS,WACzCT,EAAMc,WAAW,SADrB,UCmBDC,MA/Cf,WAAgB,IAAD,EACaC,mBACpB,CACI,CAACX,GAAI,EAAGJ,KAAM,kBAAmBO,WAAY,OAC7C,CAACH,GAAI,EAAGJ,KAAM,cAAeO,WAAY,UACzC,CAACH,GAAI,EAAGJ,KAAM,2BAA4BO,WAAY,OACtD,CAACH,GAAI,EAAGJ,KAAM,+BAAgCO,WAAY,UAC1D,CAACH,GAAI,EAAGJ,KAAM,WAAYO,WAAY,UAPnC,mBACJP,EADI,KACEgB,EADF,OAeiBD,mBAAqB,OAftC,mBAeJJ,EAfI,KAeIM,EAfJ,KAiBPC,EAAmBlB,EAevB,MAde,QAAXW,EACAO,EAAmBlB,EAAKW,QAAO,SAAAT,GAAC,MAAqB,QAAjBA,EAAEK,cACpB,WAAXI,EACPO,EAAmBlB,EAAKW,QAAO,SAAAT,GAAC,MAAqB,WAAjBA,EAAEK,cACpB,SAAXI,EACPO,EAAmBlB,EAAKW,QAAO,SAAAT,GAAC,MAAqB,SAAjBA,EAAEK,cACpB,QAAXI,IACPO,EAAmBlB,GAQnB,oCACI,0CACA,yBAAKX,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAE8B,gBACd,kBAAC,EAAD,CAAMpB,KAAMkB,EACNT,WA3BtB,SAAoBL,GAChBY,EAAQhB,EAAKW,QAAO,SAAAT,GAAC,OAAIA,EAAEE,KAAOA,OA2BhBS,WAXtB,SAA0BQ,GACtBJ,EAAUI,U,wBCNHC,EArB+B,SAAC,GACoB,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,gBAAiBC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,WAAWC,EAAW,EAAXA,MAE7CC,EAAaH,EAAOpC,IAAEwC,aAAe,IAAOxC,IAAEoC,MAAOpC,IAAEwC,aAE7D,OACI,yBAAKzC,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEyC,eACd,0CACA,2BAAOV,MAAOE,EAAMS,SAAUR,EAAiBnC,UAAWwC,EAAYI,YAAY,eAClF,0BAAM5C,UAAWC,IAAE4C,SAAUR,GAC7B,4BAAQlB,QAASiB,EAASpC,UAAWC,IAAE6C,cAAvC,YACA,0BAAM9C,UAAWC,IAAE8C,WAAnB,gBAA4CT,IAEhD,yBAAKtC,UAAWC,IAAE+C,aACbT,EAAM3B,KAAI,SAAAqC,GAAC,OAAE,uBAAGnC,IAAKmC,EAAElC,IAAV,SAAqBkC,EAAEf,KAAvB,SAAmCe,EAAElC,UCmBpDmC,EAtCX,SAAC,GAA8B,IAA7BX,EAA4B,EAA5BA,MAAOY,EAAqB,EAArBA,gBAAqB,EAEFzB,mBAAS,IAFP,mBAEnBQ,EAFmB,KAEbkB,EAFa,OAGA1B,mBAAS,IAHT,mBAGnBW,EAHmB,KAGZgB,EAHY,KAwBpBf,EAAaC,EAAMe,OAEzB,OACI,kBAAC,EAAD,CACIf,MAAOA,EACPL,KAAMA,EACNC,gBAzBgB,SAACoB,GACrBF,EAAS,IACTD,EAAQG,EAAEC,cAAcxB,QAwBpBI,QApBQ,WAEZ,GADiBF,EAAKuB,OAElBN,EAAgBjB,GAChBwB,MAAM,SAAWxB,GACjBkB,EAAQ,QACL,CAEHC,EADU,yBAcVhB,MAAOA,EACPC,WAAYA,K,yBCRbqB,MAtBf,WAAgB,IAAD,EACejC,mBAA0B,IADzC,mBACJa,EADI,KACGqB,EADH,KASX,OACI,oCACI,0CACA,yBAAK5D,UAAWC,IAAE4D,QAEd,kBAAC,EAAD,CAAmBtB,MAAOA,EACPY,gBAZP,SAACjB,GACrB,IACI4B,EAAQ,CADD,CAAC/C,GAAIgD,cAAM7B,KAAMA,IAChB,mBAAaK,IACzBqB,EAASE,S,yBCuCFE,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEtB,EAOH,EAPGA,SAAUuB,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZ/B,EAKH,EALGA,MACArC,EAIH,EAJGA,UAAWqE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMtE,IAAEoC,MAAR,YAAiBgC,GAAgC,IACnEG,EAAsBnC,EAAM,GAAD,OAAKA,EAAL,YAAcpC,IAAEwE,WAAhB,YAA8BzE,GAAaC,IAAEyE,WAE9E,OACI,oCACI,yCACIT,KAAM,OACNtB,SArBa,SAACY,GACtBZ,GACGA,EAASY,GAEZW,GAAgBA,EAAaX,EAAEC,cAAcxB,QAkBrCmC,WAhBe,SAACZ,GACxBY,GAAcA,EAAWZ,GAEf,UAAVA,EAAEzC,KACCsD,GACAA,KAYKpE,UAAWwE,GAEPF,IAEPjC,GAAS,0BAAMrC,UAAWuE,GAAqBlC,K,kCC3B7CsC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK5E,EAGR,EAHQA,UACFsE,EAEN,mCACKO,EAAc,UAAMD,EAAM3E,IAAE2E,IAAK3E,IAAE6E,QAAU,IAAM7E,IAAE8E,GAAvC,YAA6C/E,GAEjE,OACI,0CACIA,UAAW6E,GACPP,K,iBCmBDU,EA7ByC,SAAC,GASpD,EAPGf,KAOF,IANEtB,EAMH,EANGA,SAAUsC,EAMb,EANaA,gBACVjF,EAKH,EALGA,UACAkF,GAIH,EALcb,cAKd,EAJGa,UAEGZ,EAEN,4FAMKE,EAAmB,UAAMvE,IAAEkF,SAAR,YAAoBnF,GAAwB,IAErE,OACI,+BACI,yCAAOiE,KAAM,WACNtB,SAVU,SAACY,GACtB0B,GAAmBA,EAAgB1B,EAAEC,cAAc4B,SACnDzC,GAAYA,EAASY,IASVvD,UAAWwE,GACPF,IAEVY,GAAY,0BAAMlF,UAAWC,IAAEoE,eAAgBa,KCuB7CG,MApDf,WAAgB,IAAD,EAEa3D,mBAAiB,IAF9B,mBAEJ4D,EAFI,KAEEC,EAFF,KAGLlD,EAAQiD,EAAO,GAAK,QAEpBE,EAAY,WACVnD,EACAqB,MAAM,iFAENA,MAAM4B,GACNC,EAAQ,MAVL,EAcmB7D,oBAAkB,GAdrC,mBAcJ0D,EAdI,KAcKK,EAdL,KAiBX,OACI,6BACI,0CACA,yBAAKzF,UAAWC,IAAEyF,QAEd,kBAAC,EAAD,CAAgB1D,MAAOsD,EACPpB,aAAcqB,EACdnB,QAASoB,EACTnD,MAAOA,EACPrC,UAAWC,IAAE0F,OAI7B,kBAAC,EAAD,CAAaf,KAAG,EACHzD,QAASqE,GADtB,WAMA,kBAAC,EAAD,CAAeJ,QAASA,EACTH,gBAAiBQ,GADhC,cAKA,kBAAC,EAAD,CAAeL,QAASA,EACTzC,SA3BN,SAACY,GAAD,OAAsCkC,EAAWlC,EAAEC,cAAc4B,eCF3EQ,MAZf,WACI,OACI,yBAAK5F,UAAWC,IAAE4F,gBACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCAGC,MAVf,WACI,OACI,yBAAK9F,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAE8F,aAAlB,OACA,yBAAK/F,UAAWC,IAAE+F,cAAc,+CAChC,mFCmBGC,MAhBf,WACI,OACI,6BAEI,kBAAC,IAAD,KAGI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAKC,OAAQ,kBAAM,kBAAC,IAAD,CAAU/F,GAAG,mBAClD,kBAAC,IAAD,CAAO8F,KAAK,cAAcC,OAAQ,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOD,KAAK,mBAAmBC,OAAQ,kBAAM,kBAAC,EAAD,SAC7C,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,EAAD,YCJtBC,MAZf,WACI,OACI,6BAEI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,SCKDC,MAZf,WACI,OACI,yBAAKtG,UAAWC,IAAEqG,KAKd,kBAAC,EAAD,QCCQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASR,OACL,kBAAC,IAAMS,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjF,GACLkF,QAAQlF,MAAMA,EAAMmF,c","file":"static/js/main.c804477d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__3QZ00\",\"users_block\":\"Greeting_users_block__2rZB4\",\"input_wrapper\":\"Greeting_input_wrapper__24SM0\",\"correctInput\":\"Greeting_correctInput__1BXfm\",\"error\":\"Greeting_error__2bc1w\",\"error_1\":\"Greeting_error_1__3QEyh\",\"add_user_btn\":\"Greeting_add_user_btn__3egH4\",\"userCount\":\"Greeting_userCount__3SfGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_nav_block\":\"Header_main_nav_block__ASS9o\",\"links_block\":\"Header_links_block__2I_4d\",\"link\":\"Header_link__13N27\",\"activeLink\":\"Header_activeLink__1-YQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_block\":\"Todo_list_block__1lWjB\",\"list_item\":\"Todo_list_item__3i4Vj\",\"importance_block\":\"Todo_importance_block__3c157\",\"remove_button\":\"Todo_remove_button__i6EIL\",\"filter\":\"Todo_filter__23afD\",\"filter_button\":\"Todo_filter_button__2C6oD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2WQ0V\",\"errorInput\":\"SuperInputText_errorInput__a3phU\",\"error\":\"SuperInputText_error__1WBNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1BRzA\",\"red\":\"SuperButton_red__-p_eO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2m5Rf\",\"numberError\":\"Error404_numberError__v3C9b\",\"messageError\":\"Error404_messageError__1W1QL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Hw2_wrapper__23z0L\",\"list_container\":\"Hw2_list_container__3cc3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2Vaid\",\"column\":\"HW4_column__iOhhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__28dXY\",\"spanClassName\":\"SuperCheckbox_spanClassName__3KW13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1cTVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prejun_wrapper\":\"Prejun_prejun_wrapper__1v-j-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home_3\":\"HW3_home_3__1ItJN\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.main_nav_block}>\r\n            <div className={s.links_block}>\r\n                <div className={s.link}>\r\n                    <NavLink to='/pre-junior' activeClassName={s.activeLink}>PreJunior</NavLink>\r\n                </div>\r\n                <div className={s.link}>\r\n                    <NavLink to='/pre-junior-plus' activeClassName={s.activeLink}>PreJunior</NavLink>\r\n                </div>\r\n                <div className={s.link}>\r\n                    <NavLink to='/pre-junior-minus' activeClassName={s.activeLink}>PreJunior</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <h1>Homework 1</h1>\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {/*<Message*/}\r\n            {/*    avatar={messageData.avatar}*/}\r\n            {/*    name={messageData.name}*/}\r\n            {/*    message={messageData.message}*/}\r\n            {/*    time={messageData.time}*/}\r\n            {/*/>*/}\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from 'react';\r\nimport s from './Todo.module.css'\r\nimport {FilterType, ListType} from './../HW2';\r\n\r\ntype PropsType = {\r\n    task: Array<ListType>\r\n    removeTask: (id: number) => void\r\n    changeTask: (value: FilterType) => void\r\n}\r\n\r\nfunction Todo(props: PropsType) {\r\n    return (\r\n        <div>\r\n            {props.task.map(t => {\r\n                return (\r\n                    <div key={t.id} className={s.list_block}>\r\n                        <div className={s.list_item}>\r\n                            <p>{t.task}</p>\r\n                            <div className={t.importance}>{}</div>\r\n                            <button onClick={() => {\r\n                                props.removeTask(t.id)\r\n                            }} className={s.remove_button}>X\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div className={s.filter}>\r\n                <button className={s.filter_button} onClick={() => {\r\n                    props.changeTask('all')\r\n                }}>All\r\n                </button>\r\n                <button className={s.filter_button} onClick={() => {\r\n                    props.changeTask('high')\r\n                }}>High\r\n                </button>\r\n                <button className={s.filter_button} onClick={() => {\r\n                    props.changeTask('medium')\r\n                }}>Medium\r\n                </button>\r\n                <button className={s.filter_button} onClick={() => {\r\n                    props.changeTask('low')\r\n                }}>Low\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, {useState} from 'react';\r\nimport s from './Hw2.module.css';\r\nimport Todo from './TodoList/Todo';\r\n\r\nexport type ListType = {\r\n    id: number\r\n    task: string\r\n    importance: FilterType\r\n}\r\n\r\nexport type FilterType = 'all' | 'low' | 'medium' | 'high'\r\n\r\nfunction HW2() {\r\n    const [task, setTask] = useState<Array<ListType>>(\r\n        [\r\n            {id: 1, task: 'Wash the dishes', importance: 'low'},\r\n            {id: 2, task: 'Go shopping', importance: 'medium'},\r\n            {id: 3, task: 'Solve task from CodeWars', importance: 'low'},\r\n            {id: 4, task: 'Watch the movies about React', importance: 'medium'},\r\n            {id: 5, task: 'Be quite', importance: 'high'},\r\n        ]\r\n    )\r\n\r\n    function removeTask(id: number) {\r\n        setTask(task.filter(t => t.id !== id))\r\n    }\r\n\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    let arrayAfterFilter = task\r\n    if (filter === 'low') {\r\n        arrayAfterFilter = task.filter(t => t.importance === 'low')\r\n    } else if (filter === 'medium') {\r\n        arrayAfterFilter = task.filter(t => t.importance === 'medium')\r\n    } else if (filter === 'high') {\r\n        arrayAfterFilter = task.filter(t => t.importance === 'high')\r\n    } else if (filter === 'all') {\r\n        arrayAfterFilter = task\r\n    }\r\n\r\n    function changeImportance(value: FilterType) {\r\n        setFilter(value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Homework 2</h1>\r\n            <div className={s.wrapper}>\r\n                <div className={s.list_container}>\r\n                    <Todo task={arrayAfterFilter}\r\n                          removeTask={removeTask}\r\n                          changeTask={changeImportance}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HW2;","import React from 'react';\r\nimport s from './Greeting.module.css';\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingPropsType = {\r\n    users:Array<UserType>\r\n    name: string // need to fix any\r\n    setNameCallback: any// need to fix any\r\n    addUser: () => void// need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,users}) => {\r\n\r\n    const inputClass = error? s.correctInput + ' ' +  s.error: s.correctInput // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.input_wrapper}>\r\n                <h3>USERS FORM</h3>\r\n                <input value={name} onChange={setNameCallback} className={inputClass} placeholder='Enter name'/>\r\n                <span className={s.error_1}>{error}</span>\r\n                <button onClick={addUser} className={s.add_user_btn}>Add user</button>\r\n                <span className={s.userCount}>Users count: {totalUsers}</span>\r\n            </div>\r\n            <div className={s.users_block}>\r\n                {users.map(u=><p key={u.id}>Name: {u.name}, ID: {u.id}</p>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState, ChangeEvent,} from 'react';\r\nimport Greeting from './Greeting';\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> =\r\n    ({users, addUserCallback}) => {\r\n\r\n        const [name, setName] = useState('');\r\n        const [error, setError] = useState('');\r\n\r\n        const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n            setError('')\r\n            setName(e.currentTarget.value);\r\n        };\r\n\r\n\r\n        const addUser = () => {\r\n            const trimName = name.trim()\r\n            if (trimName) {\r\n                addUserCallback(name)\r\n                alert('Hello ' + name)\r\n                setName('')\r\n            } else {\r\n                let err = 'Name is not defined'\r\n                setError(err)\r\n            }\r\n\r\n        };\r\n\r\n        const totalUsers = users.length;\r\n\r\n        return (\r\n            <Greeting\r\n                users={users}\r\n                name={name}\r\n                setNameCallback={setNameCallback}\r\n                addUser={addUser}\r\n                error={error}\r\n                totalUsers={totalUsers}\r\n            />\r\n        );\r\n    }\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from 'react';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport s from './HW3.module.css';\r\nimport {v1} from 'uuid';\r\nimport AlternativeGreeting from './AlternativeGreeting';\r\n\r\n// types\r\nexport type UserType = {\r\n    id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let user = {id: v1(), name: name};\r\n        let newUsers = [user, ...users];\r\n        setUsers(newUsers); // need to fix\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Homework 3</h1>\r\n            <div className={s.home_3}>\r\n                {/*should work (должно работать)*/}\r\n                <GreetingContainer users={users}\r\n                                   addUserCallback={addUserCallback}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error? `${error} ${s.errorInput} ${className}`: s.superInput; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red: s.default + ' ' + s.h4} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperCheckbox.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n    return (\r\n        <label>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={finalInputClassName}\r\n                   {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText';\r\nimport s from './HW4.module.css';\r\nimport SuperButton from './common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox';\r\n\r\nfunction HW4() {\r\n\r\n    const [text, setText] = useState<string>('');\r\n    const error = text ? '' : 'error';\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...');\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText('')\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Homework 4</h1>\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText value={text}\r\n                                onChangeText={setText}\r\n                                onEnter={showAlert}\r\n                                error={error}\r\n                                className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton red // пропсу с булевым значением не обязательно указывать true\r\n                             onClick={showAlert}>\r\n                             delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox checked={checked}\r\n                               onChangeChecked={setChecked}>\r\n                               some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked}\r\n                               onChange={testOnChange}/>\r\n            </div>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from './Prejun.module.css'\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div className={s.prejun_wrapper}>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.numberError}>404</div>\r\n            <div className={s.messageError}><p>Page not found!</p></div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport PreJunior from './pages/PreJunior';\r\nimport Error404 from './pages/Error404';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    HOME: '/',\r\n    PRE_JUNIORPlUS: '/pre-junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совпадение (что после \"/\" ничего не будет)*/}\r\n                <Route exact path=\"/\"  render={() => <Redirect to='/pre-junior'/>}/>\r\n                <Route path=\"/pre-junior\" render={() => <PreJunior/>}/>\r\n                <Route path=\"/pre-junior-plus\" render={() => <PreJunior/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Routes from './Routes';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}